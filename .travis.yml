dist: xenial
sudo: required
services:
- docker

      
env:
- CHANGE_MINIKUBE_NONE_USER=true

addons:
  sonarcloud:
    organization: "85anju"
    token:
#       secure: "Tch2leKfmNIRG1eG4n+yLG+B1sQ7um4OUQNUZMPjRBWnnIk/bllnFFQaxbn5kVjOWTc8PG6I1bGNg3wBgQmHrmWf149elrC1FuEupdEUAau4Qijm/1aSmOWBT0re//Ju+R7rtyps+WBv46N2cxUs9nWETb7peALjwraFQbpZFet9cQF5qilK7vJVk7r2qnNw3dZToODkLqHQYN8HSqG77mRTmOP1D7qSKFOX70oYwgH4QQAF1mHjUBIV3kgVZNQbhAQZ/l7UdUQR3NXmuitnJ1VY4suyHoKbO6DjIqPVzAfS9d1jp2EC/TUFqcrbLgHQNITtNRpdRki0jLaGh4QoM0hfUfnrsx7bqSfjo1nww1jgzvDm/0mKab4I0ApiEWeMOHwhtIJquTu04lx0eDi8nOnnZHvevu9iXCHLRtv8tcMOaM8Fh0FKzDEgGOzZh4V8taMP8q/OiktsWFNwsVw3OsM1ZOe7lopaQOji4K/cMmUtOIvtieI0LraSsA8p4TQ8Y8YtuxT53xigWIlwWU9/gGFuySdtjV/CocFiafIk69YHXV7sbSCLetX+wkVGYlT55id6K75jRv9yXZ2PJa1nhGbxK8rblYoOzSnnvPrG/ANNyrzLmjiX29W2F2Tm+K09ETJJB4palZH5VT0AzK/RyLFEUQZKdlV3Vx8zXXa42is="
      secure: "$SSONAR_TOKEN" 
  
before_script:
- docker build -t anjali85/helmimg:helmtag .
# - travis encrypt super_secret_password=654b85a2ac3ea9894185abc540547b33e04698dd --add
# - gem install travis
# - travis encrypt NEW_SONAR_TOKEN=7bf8c5c19b1586a1f4d602e4c88814cdf7785a39 --add
# - echo NEW_SONAR_TOKEN
# - echo $NEW_SONAR_TOKEN

script:
- docker images  
- echo "$dockerpassword" | docker login -u "$dockerusername" --password-stdin
- docker push anjali85/helmimg:helmtag
- sonar-scanner 


after_script:
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.9.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.25.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v1.9.0
- minikube update-context
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
- kubectl cluster-info
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available"; kubectl get pods --all-namespaces; done
- kubectl get nodes
- sudo apt-get install -y --upgrade util-linux socat


- curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
- chmod 700 get_helm.sh
- ./get_helm.sh


- kubectl get pods 
- cd myhelmchart
- helm install demo .
- helm list 


- minikube_ip=$(minikube ip)
- echo $minikube_ip
- kubectl get svc
- sleep 20
- kubectl get pods
- curl http://$minikube_ip:30007/

